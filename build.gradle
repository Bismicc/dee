plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'de.somkat.iceboatracing'
version = '1.0.0'
description = 'IceBoatRacing'

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

repositories {
    // PlaceholderAPI repository first so Gradle finds it before trying Maven Central
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.11.6'

    // Database
    implementation 'org.xerial:sqlite-jdbc:3.42.0.0'
    implementation 'mysql:mysql-connector-java:8.0.33'

    // Utilities
    implementation 'org.jetbrains:annotations:24.0.1'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'org.xerial', 'de.somkat.iceboatracing.libs.xerial'
    relocate 'com.mysql', 'de.somkat.iceboatracing.libs.mysql'

    archiveClassifier.set('')
    archiveFileName = "${project.name}-${project.version}.jar"

    minimize()
}
